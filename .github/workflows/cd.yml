name: Continuous Delivery

on:
  push:
    tags: 'v*'  # push events to matching v*, i.e. v1.0, v20.15.10

env:
  PYTHON_DEFAULT_VERSION: 3.9
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  deploy:
    env:
      B2_PYPI_PASSWORD: ${{ secrets.B2_PYPI_PASSWORD }}
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create-release.outputs.upload_url }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Python ${{ env.PYTHON_DEFAULT_VERSION }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PYTHON_DEFAULT_VERSION }}
      - name: Install dependencies
        run: python -m pip install --upgrade nox pip
      - name: Build the distribution
        id: build
        run: nox -vs build
      - name: Read the Changelog
        id: read-changelog
        uses: mindsers/changelog-reader-action@v1
        with:
          version: ${{ steps.build.outputs.version }}
      - name: Create GitHub release
        id: create-release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ steps.build.outputs.version }}
          body: ${{ steps.read-changelog.outputs.log_entry }}
          draft: false
          prerelease: false
      - name: Upload the distribution to GitHub
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ${{ steps.build.outputs.asset_path }}
          asset_name: ${{ steps.build.outputs.asset_name }}
          asset_content_type: application/gzip
      - name: Upload the distribution to PyPI
        if: ${{ env.B2_PYPI_PASSWORD != '' }}
        uses: pypa/gh-action-pypi-publish@v1.3.1
        with:
          user: __token__
          password: ${{ env.B2_PYPI_PASSWORD }}
  deploy-bundle:
    needs: deploy
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-16.04, macos-10.15, windows-2019]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Python ${{ env.PYTHON_DEFAULT_VERSION }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PYTHON_DEFAULT_VERSION }}
      - name: Install dependencies
        run: python -m pip install --upgrade nox pip
      - name: Bundle the distribution
        id: bundle
        run: nox -vs bundle
      - name: Upload the distribution to GitHub
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ needs.deploy.outputs.upload_url }}
          asset_path: ${{ steps.bundle.outputs.asset_path }}
          asset_name: ${{ steps.bundle.outputs.asset_name }}
          asset_content_type: application/octet-stream
