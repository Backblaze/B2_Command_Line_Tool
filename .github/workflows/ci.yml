name: Continuous Integration

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

env:
  PYTHON_DEFAULT_VERSION: 3.9

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Python ${{ env.PYTHON_DEFAULT_VERSION }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PYTHON_DEFAULT_VERSION }}
      - name: Install dependencies
        run: python -m pip install --upgrade nox pip setuptools
      - name: Run linters
        run: nox -vs lint
      - name: Validate changelog
        if: ${{ ! startsWith(github.ref, 'refs/heads/dependabot/') }}
        uses: zattoo/changelog@v1
        with:
          token: ${{ github.token }}
  build:
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Python ${{ env.PYTHON_DEFAULT_VERSION }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PYTHON_DEFAULT_VERSION }}
      - name: Install dependencies
        run: python -m pip install --upgrade nox pip setuptools
      - name: Build the distribution
        run: nox -vs build
  test:
    needs: lint
    env:
      B2_TEST_APPLICATION_KEY: ${{ secrets.B2_TEST_APPLICATION_KEY }}
      B2_TEST_APPLICATION_KEY_ID: ${{ secrets.B2_TEST_APPLICATION_KEY_ID }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.5, 3.6, 3.7, 3.8, 3.9, pypy3]
        exclude:
          - os: windows-latest
            python-version: pypy3
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: python -m pip install --upgrade nox pip setuptools
      - name: Run unit tests
        run: nox -vs unit
      - name: Run integration tests
        if: ${{ env.B2_TEST_APPLICATION_KEY != '' && env.B2_TEST_APPLICATION_KEY_ID != '' }}
        run: nox -vs integration -- --cleanup
  test-bundle:
    needs: lint
    env:
      B2_TEST_APPLICATION_KEY: ${{ secrets.B2_TEST_APPLICATION_KEY }}
      B2_TEST_APPLICATION_KEY_ID: ${{ secrets.B2_TEST_APPLICATION_KEY_ID }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-10.15, windows-2019]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Python ${{ env.PYTHON_DEFAULT_VERSION }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PYTHON_DEFAULT_VERSION }}
      - name: Install dependencies
        run: python -m pip install --upgrade nox pip setuptools
      - name: Bundle the distribution
        id: bundle
        run: nox -vs bundle
      - name: Run integration tests
        if: ${{ env.B2_TEST_APPLICATION_KEY != '' && env.B2_TEST_APPLICATION_KEY_ID != '' }}
        run: nox -vs integration -- --sut=${{ steps.bundle.outputs.asset_path }} --cleanup
      - name: Upload assets
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          path: ${{ steps.bundle.outputs.asset_path }}
          name: ${{ steps.bundle.outputs.asset_name }}
          if-no-files-found: warn
          retention-days: 7
  doc:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Python ${{ env.PYTHON_DEFAULT_VERSION }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PYTHON_DEFAULT_VERSION }}
      - name: Install dependencies
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo apt-get update -y
          sudo apt-get install -y graphviz plantuml
          python -m pip install --upgrade nox pip setuptools
      - name: Build the docs
        run: nox --non-interactive -vs doc
