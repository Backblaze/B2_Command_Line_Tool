name: Continuous Integration

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

env:
  PYTHON_DEFAULT_VERSION: 3.8

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ env.PYTHON_DEFAULT_VERSION }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PYTHON_DEFAULT_VERSION }}
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"
      - name: Install dependencies
        run: python -m pip install --upgrade nox pip
      - name: Run linters
        run: nox -vs ${{ github.job }}
  build:
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ env.PYTHON_DEFAULT_VERSION }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PYTHON_DEFAULT_VERSION }}
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"
      - name: Install dependencies
        run: python -m pip install --upgrade nox pip
      - name: Build the distribution
        run: nox -vs ${{ github.job }}
  test:
    needs: lint
    env:
      TEST_APPLICATION_KEY: ${{ secrets.TEST_APPLICATION_KEY }}
      TEST_APPLICATION_KEY_ID: ${{ secrets.TEST_APPLICATION_KEY_ID }}
      CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.5, 3.6, 3.7, 3.8, '3.9.0-beta.5', pypy3]
        exclude:
          - os: windows-latest
            python-version: pypy3
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"
      - name: Install dependencies
        run: python -m pip install --upgrade nox pip
      - name: Run tests
        run: nox -vs ${{ github.job }}
      - name: Report to Codacy
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.python-version == env.PYTHON_DEFAULT_VERSION && env.CODACY_PROJECT_TOKEN != '' }}
        uses: codacy/codacy-coverage-reporter-action@v0
        with:
          project-token: ${{ env.CODACY_PROJECT_TOKEN }}
          coverage-reports: ./coverage.xml
      - name: Report to Codecov
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.python-version == env.PYTHON_DEFAULT_VERSION && env.CODECOV_TOKEN != '' }}
        uses: codecov/codecov-action@v1
        with:
          token: ${{ env.CODECOV_TOKEN }}
          file: ./coverage.xml
          fail_ci_if_error: true
  doc:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ env.PYTHON_DEFAULT_VERSION }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PYTHON_DEFAULT_VERSION }}
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"
      - name: Install dependencies
        run: |
          sudo apt-get install -y graphviz plantuml
          python -m pip install --upgrade nox pip
      - name: Build the docs
        run: nox --non-interactive -vs ${{ github.job }}
